{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Profile.jsx\";\nimport React from \"react\";\nimport { any, number, string } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Profile = _ref => {\n  let {\n    user\n  } = _ref;\n  const {\n    username,\n    tag,\n    location,\n    avatar,\n    stats\n  } = user;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar,\n        alt: \"User avatar\",\n        class: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"name\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"tag\",\n        children: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"location\",\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"label\",\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"quantity\",\n          children: stats.followers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"label\",\n          children: \"Views\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"quantity\",\n          children: stats.views\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"label\",\n          children: \"Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"quantity\",\n          children: stats.likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Profile;\nProfile.propTypes = {\n  user: shape({\n    username: string,\n    tag: string,\n    location: string,\n    avatar: any,\n    stats: {\n      followers: number,\n      views: number,\n      likes: number\n    }\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/projects/goit-react-hw-01-components/src/components/Profile.jsx"],"names":["React","any","number","string","Profile","user","username","tag","location","avatar","stats","followers","views","likes","propTypes","shape"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,QAAoC,YAApC;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAc;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACjC,QAAM;AACFC,IAAAA,QADE;AAEFC,IAAAA,GAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,MAJE;AAKFC,IAAAA;AALE,MAKQL,IALd;AAOA,sBACI;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,8BACI;AACI,QAAA,GAAG,EAAEI,MADT;AAEI,QAAA,GAAG,EAAC,aAFR;AAGI,QAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAG,QAAA,KAAK,EAAC,MAAT;AAAA,kBAAiBH;AAAjB;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAG,QAAA,KAAK,EAAC,KAAT;AAAA,kBAAgBC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAG,QAAA,KAAK,EAAC,UAAT;AAAA,kBAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAI,MAAA,KAAK,EAAC,OAAV;AAAA,8BACI;AAAA,gCACI;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,KAAK,EAAC,UAAZ;AAAA,oBAAwBE,KAAK,CAACC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,KAAK,EAAC,UAAZ;AAAA,oBAAwBD,KAAK,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAA,gCACI;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,KAAK,EAAC,UAAZ;AAAA,oBAAwBF,KAAK,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CArCM;KAAMT,O;AAuCbA,OAAO,CAACU,SAAR,GAAoB;AAChBT,EAAAA,IAAI,EAACU,KAAK,CAAC;AACXT,IAAAA,QAAQ,EAAEH,MADC;AAEXI,IAAAA,GAAG,EAAEJ,MAFM;AAGXK,IAAAA,QAAQ,EAAEL,MAHC;AAIXM,IAAAA,MAAM,EAAER,GAJG;AAKXS,IAAAA,KAAK,EAAE;AACPC,MAAAA,SAAS,EAAET,MADJ;AAEPU,MAAAA,KAAK,EAAEV,MAFA;AAGPW,MAAAA,KAAK,EAAEX;AAHA;AALI,GAAD;AADM,CAApB","sourcesContent":["import React from \"react\";\r\nimport { any, number, string } from 'prop-types';\r\n\r\nexport const Profile = ({ user }) => {\r\n    const {\r\n        username,\r\n        tag,\r\n        location,\r\n        avatar,\r\n        stats } = user;\r\n\r\n    return (\r\n        <div class=\"profile\">\r\n            <div class=\"description\">\r\n                <img\r\n                    src={avatar}\r\n                    alt=\"User avatar\"\r\n                    class=\"avatar\"\r\n                />\r\n                <p class=\"name\">{username}</p>\r\n                <p class=\"tag\">{tag}</p>\r\n                <p class=\"location\">{location}</p>\r\n            </div>\r\n\r\n            <ul class=\"stats\">\r\n                <li>\r\n                    <span class=\"label\">Followers</span>\r\n                    <span class=\"quantity\">{stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span class=\"label\">Views</span>\r\n                    <span class=\"quantity\">{stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span class=\"label\">Likes</span>\r\n                    <span class=\"quantity\">{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    user:shape({\r\n    username: string,\r\n    tag: string,\r\n    location: string,\r\n    avatar: any,\r\n    stats: {\r\n    followers: number,\r\n    views: number,\r\n    likes: number,\r\n    },\r\n  })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}