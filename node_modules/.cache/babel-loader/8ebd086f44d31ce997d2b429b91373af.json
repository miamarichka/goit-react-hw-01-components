{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Profile.jsx\";\nimport React from \"react\";\nimport { number, string, shape } from 'prop-types';\nimport { ProfileWrap, ProfileImg, UserName, UserTag } from './styled/Profile.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Profile = _ref => {\n  let {\n    username,\n    tag,\n    location,\n    avatar,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ProfileWrap, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileImg, {\n        src: avatar,\n        alt: \"User avatar\",\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserName, {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserTag, {\n        children: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Location, {\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Followers \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quantity\",\n          children: stats.followers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Views \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quantity\",\n          children: stats.views\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: \"Likes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quantity\",\n          children: stats.likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = Profile;\nProfile.propTypes = {\n  user: shape({\n    username: string,\n    tag: string,\n    location: string,\n    avatar: string,\n    stats: {\n      followers: number,\n      views: number,\n      likes: number\n    }\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/projects/goit-react-hw-01-components/src/components/Profile.jsx"],"names":["React","number","string","shape","ProfileWrap","ProfileImg","UserName","UserTag","Profile","username","tag","location","avatar","stats","followers","views","likes","propTypes","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAsC,YAAtC;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,OAJF,QAKO,yBALP;;AAOA,OAAO,MAAMC,OAAO,GAAG,QAMhB;AAAA,MANiB;AACpBC,IAAAA,QADoB;AAEpBC,IAAAA,GAFoB;AAGpBC,IAAAA,QAHoB;AAIpBC,IAAAA,MAJoB;AAKpBC,IAAAA;AALoB,GAMjB;AAEH,sBACI,QAAC,WAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,GAAG,EAAED,MADT;AAEI,QAAA,GAAG,EAAC,aAFR;AAGI,QAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,QAAD;AAAA,kBAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,OAAD;AAAA,kBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,QAAD;AAAA,kBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,8BACI;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA4BE,KAAK,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA4BD,KAAK,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA,oBAA4BF,KAAK,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CArCM;KAAMR,O;AAuCbA,OAAO,CAACS,SAAR,GAAoB;AAChBC,EAAAA,IAAI,EAACf,KAAK,CAAC;AACXM,IAAAA,QAAQ,EAAEP,MADC;AAEXQ,IAAAA,GAAG,EAAER,MAFM;AAGXS,IAAAA,QAAQ,EAAET,MAHC;AAIXU,IAAAA,MAAM,EAAEV,MAJG;AAKXW,IAAAA,KAAK,EAAE;AACPC,MAAAA,SAAS,EAAEb,MADJ;AAEPc,MAAAA,KAAK,EAAEd,MAFA;AAGPe,MAAAA,KAAK,EAAEf;AAHA;AALI,GAAD;AADM,CAApB","sourcesContent":["import React from \"react\";\r\nimport { number, string, shape } from 'prop-types';\r\nimport {\r\n  ProfileWrap,\r\n  ProfileImg,\r\n  UserName,\r\n  UserTag,\r\n} from './styled/Profile.styled';\r\n\r\nexport const Profile = ({ \r\n    username,\r\n    tag,\r\n    location,\r\n    avatar,\r\n    stats\r\n }) => {\r\n    \r\n    return (\r\n        <ProfileWrap>\r\n            <div className=\"description\">\r\n                <ProfileImg\r\n                    src={avatar}\r\n                    alt=\"User avatar\"\r\n                    className=\"avatar\"\r\n                />\r\n                <UserName>{username}</UserName>\r\n                <UserTag>{tag}</UserTag>\r\n                <Location>{location}</Location>\r\n            </div>\r\n\r\n            <ul className=\"stats\">\r\n                <li>\r\n                    <span className=\"label\">Followers </span>\r\n                    <span className=\"quantity\">{stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span className=\"label\">Views </span>\r\n                    <span className=\"quantity\">{stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className=\"label\">Likes </span>\r\n                    <span className=\"quantity\">{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </ProfileWrap>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    user:shape({\r\n    username: string,\r\n    tag: string,\r\n    location: string,\r\n    avatar: string,\r\n    stats: {\r\n    followers: number,\r\n    views: number,\r\n    likes: number,\r\n    },\r\n  })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}